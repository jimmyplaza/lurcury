package main

import (
	"github.com/ethereum/go-ethereum/common"
        "github.com/ethereum/go-ethereum/core/rawdb"
        "github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/vm"
	"lurcury/types"
	"log"
	"testing"
)
/*
func TestContext(t *testing.T){
	text := NewContext()
	fmt.Println("==============TestContext===============")
	fmt.Println("CanTransfer:",text.CanTransfer)
	fmt.Println("Transfer:",text.Transfer)
	fmt.Println("GetHash:",text.GetHash)
	fmt.Println("Origin:",text.Origin)
	fmt.Println("CoinBase:",text.Coinbase)
	fmt.Println("BlockNumber:",text.BlockNumber)
	fmt.Println("Time:",text.Time)
	fmt.Println("GasLimit:",text.GasLimit)
	fmt.Println("GasPrice:",text.GasPrice)
}

func TestCreate(t *testing.T){
        statedb,_ := state.New(common.Hash{}, state.NewDatabase(rawdb.NewMemoryDatabase()))
        con := NewContext()
	create(con, statedb, []byte("123"))
}
*/

func TestCreateAndRun(t *testing.T){
        con := NewContext()
        con.chainConfig = GetChainConfig()
        statedb,_ := state.New(common.Hash{}, state.NewDatabase(rawdb.NewMemoryDatabase()))
        evm := vm.NewEVM(con.context, statedb, con.chainConfig, con.config)
	//code := "0x6080604052600160005534801561001557600080fd5b5060e3806100246000396000f3fe6080604052600436106043576000357c01000000000000000000000000000000000000000000000000000000009004806333ec6380146048578063b518a776146070575b600080fd5b348015605357600080fd5b50605a6098565b6040518082815260200191505060405180910390f35b348015607b57600080fd5b50608260a1565b6040518082815260200191505060405180910390f35b60008054905090565b600060016000540160008190555060005490509056fea165627a7a72305820bab2f13ad9097b33dc7d59a28e5b12b67ee30286aad768397f395db6a829e06b0029"
	code := "0x6080604052348015600f57600080fd5b50607f8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f3ccaac014602d575b600080fd5b60336045565b60408051918252519081900360200190f35b60019056fea265627a7a72305820c57dbc5f68f99f47417dbffbfb3f27383bafc2b7eef65ad724e63864ed151d8864736f6c63430005090032"
        dtransaction := types.TransactionJson{
                Type:"VvmDCreate",
                Nonce:1,
                From:"0xea674fdde714fd979de3edf0f56aa9716b898e11",
                Balance:"0",
                Input:code,
                To:"0xea674fdde714fd979de3edf0f56aa9716b898e11",
        }
        res,address,usegas,err := Drill_Run_decode(evm, dtransaction)
        log.Println("test estimateDCRE", res, address, usegas, err)


        transaction := types.TransactionJson{
                Type:"VvmCreate",
                Nonce:2,
                From:"0x2A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c",
                Balance:"0",
                Input:code,
		To:"0x4aB04F903335378702FDcE7252550cA5e997f411",
        }
        res,contract,usegas,err := Run_decode(evm, transaction)
        log.Println("test create:",res, contract,usegas,err)

        etransaction := types.TransactionJson{
                Type:"VvmCall",
                Nonce:1,
                From:"0xea674fdde714fd979de3edf0f56aa9716b898e11",
                Balance:"0",
                Input:"0xf3ccaac0",//"0xb518a776",
		//Input:"0xa035b1fe",
		//Input:"0xf3ccaac0",
                To:contract,
        }
        res, address, usegas,err = Run_decode(evm, etransaction)
        log.Println("test excute r", res, address, usegas, err)


        w := types.TransactionJson{
                Type:"VvmDCall",
                Nonce:1,
                From:"0xea674fdde714fd979de3edf0f56aa9716b898e11",
                Balance:"0",
                Input:"0xb518a776",
		//Input:"0x2ac19e450000000000000000000000000000000000000000000000000000000000000001",
		//Input:"0xf3ccaac0",
                To:contract,
        }
	m,n,o,p := Drill_Run_decode(evm, w)
	log.Println("test estimate", m, n, o, p)

}
/*
func TestImageCode(t *testing.T){
        con := NewContext()
        con.chainConfig = GetChainConfig()
        statedb,_ := state.New(common.Hash{}, state.NewDatabase(rawdb.NewMemoryDatabase()))
        evm := vm.NewEVM(con.context, statedb, con.chainConfig, con.config)
        code := "0x6080604052662386f26fc1000060015562015180600255610e1060035533600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006957600080fd5b50610a5c806100796000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631e010439146100725780632ac19e45146100aa578063a035b1fe146100eb578063a996f74414610116578063ca144fa3146101c2575b600080fd5b61009060048036038101908080359060200190929190505050610315565b604051808215151515815260200191505060405180910390f35b3480156100b657600080fd5b506100d560048036038101908080359060200190929190505050610389565b6040518082815260200191505060405180910390f35b3480156100f757600080fd5b50610100610478565b6040518082815260200191505060405180910390f35b6101c060048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061047e565b005b3480156101ce57600080fd5b506101ed60048036038101908080359060200190929190505050610805565b6040518080602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101561026f578082015181840152602081019050610254565b50505050905090810190601f16801561029c5780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b838110156102d55780820151818401526020810190506102ba565b50505050905090810190601f1680156103025780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561037f573d6000803e3d6000fd5b5060019050919050565b6000806000429150600080858152602001908152602001600020600301548203905060008060008681526020019081526020016000206004015414156103d3576001549250610471565b6002548111151561043857600354600080868152602001908152602001600020600301548303600080878152602001908152602001600020600401540281151561041957fe5b0460008086815260200190815260200160002060040154019250610471565b80600354600354600254600080898152602001908152602001600020600401540281151561046257fe5b040281151561046d57fe5b0492505b5050919050565b60015481565b6000806000808681526020019081526020016000206003015442039150600254826001548115156104ab57fe5b048115156104b557fe5b0434101515156104c457600080fd5b4290508360008087815260200190815260200160002060000190805190602001906104f092919061098b565b50426000808781526020019081526020016000206003018190555082600080878152602001908152602001600020600101908051906020019061053492919061098b565b5060008060008781526020019081526020016000206004015414156105745760015460008087815260200190815260200160002060040181905550610640565b6002548210156105ef5760035460008087815260200190815260200160002060030154820360008088815260200190815260200160002060040154028115156105b957fe5b0460008087815260200190815260200160002060040154016000808781526020019081526020016000206004018190555061063f565b816003546003546002546000808a8152602001908152602001600020600401540281151561061957fe5b040281151561062457fe5b04600080878152602001908152602001600020600401819055505b5b600073ffffffffffffffffffffffffffffffffffffffff1660008087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561074c5760008086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc606460606000808a8152602001908152602001600020600401540281151561071e57fe5b049081150290604051600060405180830381858888f1935050505015801561074a573d6000803e3d6000fd5b505b3373ffffffffffffffffffffffffffffffffffffffff166108fc6000808881526020019081526020016000206004015434039081150290604051600060405180830381858888f193505050501580156107a9573d6000803e3d6000fd5b503360008087815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108b15780601f10610886576101008083540402835291602001916108b1565b820191906000526020600020905b81548152906001019060200180831161089457829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561094f5780601f106109245761010080835404028352916020019161094f565b820191906000526020600020905b81548152906001019060200180831161093257829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109cc57805160ff19168380011785556109fa565b828001600101855582156109fa579182015b828111156109f95782518255916020019190600101906109de565b5b509050610a079190610a0b565b5090565b610a2d91905b80821115610a29576000816000905550600101610a11565b5090565b905600a165627a7a72305820c7736fd5405480d1f7c9a7adc1f469ca2483ca38342bfaa591a7db83b2d38f180029"

        transaction := types.TransactionJson{
                Type:"VvmCreate",
                Nonce:2,
                From:"0x2A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c",
                Balance:"0",
                Input:code,
                To:"0x4aB04F903335378702FDcE7252550cA5e997f411",
        }
        res,contract,usegas,err := Run_decode(evm, transaction)
        log.Println("test create:",res, contract,usegas,err)

        etransaction := types.TransactionJson{
                Type:"VvmCall",
                Nonce:1,
                From:"0xea674fdde714fd979de3edf0f56aa9716b898e11",
                Balance:"10000000000000000000",
                Input:"0xa996f744000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000007668747470733a2f2f7067772e75646e2e636f6d2e74772f67772f70686f746f2e7068703f753d68747470733a2f2f75632e75646e2e636f6d2e74772f70686f746f2f323031382f30352f32342f39392f343739333230342e6a706726783d3026793d302673773d302673683d30266578703d3336303000000000000000000000000000000000000000000000000000000000000000000000000000000000000376616e0000000000000000000000000000000000000000000000000000000000",
                To:contract,
        }
        res, address, usegas,err := Run_decode(evm, etransaction)
        log.Println("test excute", res, address, usegas, err)
}
*/


